# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCheckname():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_checkname(self):
    """Переход должен быть на https://www.avtodispetcher.ru/distance/"""
    # Test name: check_name
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://yandex.kz/")
    # 2 | setWindowSize | 1458x874 | 
    self.driver.set_window_size(1458, 874)
    # 3 | click | id=text | 
    self.driver.find_element(By.ID, "text").click()
    # 4 | type | id=text | расчет расстояний между городами 
    self.driver.find_element(By.ID, "text").send_keys("расчет расстояний между городами ")
    # 5 | click | css=.mini-suggest__button | 
    self.driver.find_element(By.CSS_SELECTOR, ".mini-suggest__button").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.LINK_TEXT,"Расчет расстояний между городами").click()
    window_name = self.driver.window_handles[1]    
    self.driver.switch_to.window(window_name)
    time.sleep(5)
    assert self.driver.current_url == 'https://www.avtodispetcher.ru/distance/',  'Не верный адрес перехода'  

  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  
  def test_record(self):
    self.driver.get("https://www.avtodispetcher.ru/distance/")
    self.driver.set_window_size(1458, 1018)
    self.driver.find_element(By.NAME, "from").send_keys("Тула")
    self.driver.find_element(By.NAME, "to").send_keys("Санкт-Петербург")
    self.driver.find_element(By.NAME, "fc").clear()
    self.driver.find_element(By.NAME, "fc").send_keys("9")
    self.driver.find_element(By.NAME, "fp").clear()
    self.driver.find_element(By.NAME, "fp").send_keys("46")
    self.driver.find_element(By.CSS_SELECTOR, ".submit_button > input").click()
    
    time.sleep(2)
    range_path = self.driver.find_element_by_xpath('//*[@id="totalDistance"]').text
    assert int(range_path) == 897, 'не верный километраж'
    s = self.driver.find_element_by_xpath('//*[@id="summaryContainer"]/form/p').text
    word_list = s.split()
    num_list = []

    for word in word_list:
        if word.isnumeric():
            num_list.append(int(word))

    assert num_list[-1] == 3726, 'не верная стоимость'
    time.sleep(1)

  
  def teardown_method(self, method):
    self.driver.quit()
